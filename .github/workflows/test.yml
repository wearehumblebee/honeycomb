name: Lint and run test

on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout git branch
      - uses: actions/checkout@v2
      # Install node.js environment
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      # Cache node_modules (busting only when yarn.lock change)
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      # Install dependencies
      - name: Install
        run: yarn install --frozen-lockfile
      # Run eslint
      - name: Lint
        run: yarn run lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        node-version: [
            14.x, # current LTS
          ]
    steps:
      # Checkout git branch
      - uses: actions/checkout@v2
      # Install node.js environment
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      # Cache node_modules (busting only when yarn.lock change)
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      # Install dependencies
      - name: Install
        run: yarn install --frozen-lockfile
      # Run all tests
      - name: Test
        run: yarn run test

  # Deploy Chromatic
  chromatic:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Checkout git branch
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Required (Chromatic needs the entire git history)
      # Install node.js environment
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
      # Cache node_modules (busting only when yarn.lock change)
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
      # Install dependencies
      - name: Install
        run: yarn install --frozen-lockfile
      # Build Storybook (chromaui action uses npm and cannot use hoisted dependencies from yarn workspaces)
      - name: Build Storybook
        run: yarn run build:storybook
      # Chromatic deployment
      - uses: chromaui/action@v1
        with:
          storybookBuildDir: dist
          exitZeroOnChanges: true # from PRs: ensure snapshot differences do not fail the workflow
          # ignoreLastBuildOnBranch: true
          token: ${{ secrets.GITHUB_TOKEN }}
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          workingDir: packages/storybook-react
